pipeline {
    agent any

    environment {
        IMAGE_NAME = "restaurants-api"
        DOCKER_PORT = "5100"
    }

    stages {

        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://tu-repo-git.git'
            }
        }

        stage('Restore & Build') {
            steps {
                script {
                    sh 'dotnet restore Restaurants.API/Restaurants.API.csproj'
                    sh 'dotnet build Restaurants.API/Restaurants.API.csproj -c Release'
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    sh 'dotnet test Restaurants.Tests/Restaurants.Tests.csproj'
                }
            }
        }

        stage('Publish') {
            steps {
                script {
                    sh 'dotnet publish Restaurants.API/Restaurants.API.csproj -c Release -o ./publish /p:UseAppHost=false'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${IMAGE_NAME} -f Restaurants.API/Dockerfile ."
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    // Elimina contenedor previo si existe
                    sh "docker rm -f ${IMAGE_NAME} || true"
                    // Corre el contenedor
                    sh "docker run -d -p ${DOCKER_PORT}:5000 --name ${IMAGE_NAME} ${IMAGE_NAME}"
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline finished."
        }
        success {
            echo "✅ Build and container deployment successful!"
        }
        failure {
            echo "❌ Something went wrong!"
        }
    }
}
